<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hiqgroup.hiq.dao.SmtUserroleDao">

    <resultMap type="com.hiqgroup.hiq.entity.SmtUserrole" id="SmtUserroleMap">
        <result property="userid" column="UserId" jdbcType="VARCHAR"/>
        <result property="roleid" column="RoleId" jdbcType="VARCHAR"/>
        <result property="edtbyuserid" column="EdtByUserId" jdbcType="VARCHAR"/>
        <result property="edttime" column="EdtTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="SmtUserroleMap">
        select UserId,
               RoleId,
               EdtByUserId,
               EdtTime
        from hiquality.smt_userrole
        where UserId = #{userid}
    </select>

    <!--查询记录总数-->
    <select id="getCount" resultType="int">
        select count(*)
        from hiquality.smt_userrole
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="SmtUserroleMap">
        select UserId,
               RoleId,
               EdtByUserId,
               EdtTime
        from hiquality.smt_userrole
        order by ${orderby} ${asc}
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="SmtUserroleMap">
        select
        UserId, RoleId, EdtByUserId, EdtTime
        from hiquality.smt_userrole
        <where>
            <if test="userid != null and userid != ''">
                and UserId = #{userid}
            </if>
            <if test="roleid != null and roleid != ''">
                and RoleId = #{roleid}
            </if>
            <if test="edtbyuserid != null and edtbyuserid != ''">
                and EdtByUserId = #{edtbyuserid}
            </if>
            <if test="edttime != null">
                and EdtTime = #{edttime}
            </if>
        </where>
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAllLike" resultMap="SmtUserroleMap">
        select
        UserId, RoleId, EdtByUserId, EdtTime
        from hiquality.smt_userrole
        <where>
            <if test="userid != null and userid != ''">
                and UserId like #{userid}
            </if>
            <if test="roleid != null and roleid != ''">
                and RoleId like #{roleid}
            </if>
            <if test="edtbyuserid != null and edtbyuserid != ''">
                and EdtByUserId like #{edtbyuserid}
            </if>
            <if test="edttime != null">
                and EdtTime like #{edttime}
            </if>
        </where>
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAllWhereOr" resultMap="SmtUserroleMap">
        select
        UserId, RoleId, EdtByUserId, EdtTime
        from hiquality.smt_userrole
        <where>
            <if test="userid != null and userid != ''">
                or UserId = #{userid}
            </if>
            <if test="roleid != null and roleid != ''">
                or RoleId = #{roleid}
            </if>
            <if test="edtbyuserid != null and edtbyuserid != ''">
                or EdtByUserId = #{edtbyuserid}
            </if>
            <if test="edttime != null">
                or EdtTime = #{edttime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="userid" useGeneratedKeys="true">
        insert into hiquality.smt_userrole(UserId, RoleId, EdtByUserId, EdtTime)
        values (#{userid}, #{roleid}, #{edtbyuserid}, #{edttime})
    </insert>

    <insert id="insertBatch" keyProperty="userid" useGeneratedKeys="true">
        insert into hiquality.smt_userrole(UserId, RoleId, EdtByUserId, EdtTime)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userid}, #{entity.roleid}, #{entity.edtbyuserid}, #{entity.edttime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="userid" useGeneratedKeys="true">
        insert into hiquality.smt_userrole(UserId, RoleId, EdtByUserId, EdtTime)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userid}, #{entity.roleid}, #{entity.edtbyuserid}, #{entity.edttime})
        </foreach>
        on duplicate key update
        UserId = values(UserId) , RoleId = values(RoleId) , EdtByUserId = values(EdtByUserId) , EdtTime =
        values(EdtTime)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update hiquality.smt_userrole
        <set>
            <if test="edtbyuserid != null and edtbyuserid != ''">
                EdtByUserId = #{edtbyuserid},
            </if>
            <if test="edttime != null">
                EdtTime = #{edttime},
            </if>
        </set>
        where UserId = #{userid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from hiquality.smt_userrole
        where UserId = #{userid}
    </delete>

</mapper>
